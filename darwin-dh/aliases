alias k-production-ap="kubectl --kubeconfig $HOME/.kube_tool/production-ap"
alias t-production-ap="KUBECONFIG=$HOME/.kube_tool/production-ap kubetail"
alias k9s-production-ap="k9s --readonly --kubeconfig $HOME/.kube_tool/production-ap"

alias k-production-tes-ap="kubectl --kubeconfig $HOME/.kube_tool/production-tes-ap"
alias t-production-tes-ap="KUBECONFIG=$HOME/.kube_tool/production-tes-ap kubetail"
alias k9s-production-tes-k9s="kubectl --kubeconfig $HOME/.kube_tool/production-tes-ap"

alias k-production-eu="kubectl --kubeconfig $HOME/.kube_tool/production-eu"
alias t-production-eu="KUBECONFIG=$HOME/.kube_tool/production-eu kubetail"
alias k9s-production-eu="k9s --readonly --kubeconfig $HOME/.kube_tool/production-eu"

alias k-production-us="kubectl --kubeconfig $HOME/.kube_tool/production-us"
alias t-production-us="KUBECONFIG=$HOME/.kube_tool/production-us kubetail"
alias k9s-production-us="k9s --readonly --kubeconfig $HOME/.kube_tool/production-us"

alias k-production-dwh="kubectl --kubeconfig $HOME/.kube_tool/production-dwh"
alias t-production-dwh="KUBECONFIG=$HOME/.kube_tool/production-dwh kubetail"
alias k9s-production-dwh="k9s --readonly --kubeconfig $HOME/.kube_tool/production-dwh"

alias k-staging="kubectl --kubeconfig $HOME/.kube_tool/staging"
alias t-staging="KUBECONFIG=$HOME/.kube_tool/staging kubetail"
alias k9s-staging="k9s --readonly --kubeconfig $HOME/.kube_tool/staging"

alias k-shared-eu="kubectl --kubeconfig $HOME/.kube_tool/production-shared-eu"
alias t-shared-eu="KUEBCONFIG=$HOME/.kube_tool/production-shared-eu kubetail"
alias k9s-shared-eu="k9s --readonly --kubeconfig $HOME/.kube_tool/production-shared-eu"

alias k-qa="kubectl --kubeconfig $HOME/.kube_tool/qa"
alias t-shared-eu="KUBECONFIG=$HOME/.kube_tool/production-shared-eu kubetail"
alias k9s-qa="k9s --readonly --kubeconfig $HOME/.kube_tool/qa"

alias k-argo="kubectl --kubeconfig "$HOME/.kube/config" --context eu01-infra01 --namespace argo-workflows"
alias t-argo="KUBECONFIG=$HOME/.kube/config kubetail --context eu01-infra01 --namespace argo-workflows"

alias k-airflow-stg="kubectl --kubeconfig "$HOME/.kube_tool/staging-eu" -namespace log-ds"
alias t-airflow-stg="KUBECONFIG=$HOME/.kube_tool/staging-eu kubetail -namespace log-ds"

alias argo='env KUBECONFIG="$HOME/.kube/config" argo'
alias helmfile='env KUBECONFIG="$HOME/.kube/config" helmfile'

function k9ss {
  k9s --readonly --kubeconfig "$HOME/.kube_tool/$(ls $HOME/.kube_tool | fzf)"
}

function hello-world() {
  ssh-add --apple-use-keychain &&
  eval $(op signin --account my.1password.com) &&
  saml2aws login -a log-prd --mfa-token="$(op item get --otp iam.syslogistics.io)" --skip-prompt &&
  saml2aws login -a log-stg --mfa-token="$(op item get --otp iam.syslogistics.io)" --skip-prompt &&
  saml2aws login -a log-shared --mfa-token="$(op item get --otp iam.syslogistics.io)" --skip-prompt &&
  aws --region eu-west-1 ecr get-login-password --profile log-prd | docker login --username AWS --password-stdin 683110685365.dkr.ecr.eu-west-1.amazonaws.com &&
  echo "Hello World!"
}

function hello-argo() {
  unset ARGO_TOKEN
  export ARGO_TOKEN=$(argo auth --context eu01-infra01 token)
}

function hello-minikube() {
  minikube start &&
  eval "$(minikube -p minikube docker-env)"
}

function find-repo() {
  ~/repos/github.com/.bin/list-projects | fzf | xargs -I {} ~/repos/github.com/.bin/ensure-project {}
}

function rp() {
  cd "$(find-repo)"
}

function crp() {
  code "$(find-repo)"
}
